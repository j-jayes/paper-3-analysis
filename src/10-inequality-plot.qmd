---
title: "Untitled"
format: html
---


```{r}
library(tidyverse)
library(here)
library(arrow)
library(ggtext)
library(showtext)
## Loading Google fonts (https://fonts.google.com/)
font_add_google("IBM Plex Mono", "ibm")
font_add_google("Roboto", "roboto")

showtext_opts(dpi = 300)
showtext_auto(enable = TRUE)
theme_set(theme_light())

df <- read_parquet(here("data/census/census_1930_excl_unbalanced_controls.parquet"))

df <- as_tibble(df)

df <- df %>% 
filter(birth_parish_distance_to_line <= 300,
  age >= 15,
  age <= 100)

```

What is the figure that we want to make?

Comparing the share of income in each parish for treated and control individuals.

We look at how much of the income in a parish is earned individuals across the income distribution. 

So we take each treated individual, and we order their incomes, then we break up the order and look at the distribution. 

Then we take control individuals, we order their incomes, break up the order, make another graph.

We can do this on the parish level as well as overall.

```{r}
df <- df %>%
    select(log_income, birth_parish_treated, current_parish_treated, current_parish_ref_code) %>%
    mutate(log_income_incl_zero = case_when(
        log_income == -Inf ~ 1,
        is.na(log_income) ~ 0,
        TRUE ~ log_income
    ))


decile_shares <- df %>%
  mutate(total_income = sum(log_income_incl_zero, na.rm = TRUE)) %>% 
  group_by(birth_parish_treated) %>% 
  mutate(
    rn = row_number(),
    pctile = ntile(rn, 5)
  ) %>%
  ungroup() %>% 
  group_by(birth_parish_treated, pctile) %>%
  mutate(sum_income = sum(log_income_incl_zero)) %>%
  ungroup() %>% 
  distinct(birth_parish_treated, pctile, sum_income, total_income) %>% 
  group_by(birth_parish_treated) %>% 
  mutate(
    cumsum_income = cumsum(sum_income),
    share_of_total_income = cumsum_income / total_income,
    decile_share = sum_income / total_income,
    pctile = pctile / 5
  ) %>% 
  ungroup()


decile_shares %>%
  mutate(
    pctile = pctile / 2) %>%
  ggplot(aes(y = pctile, x = decile_share, colour = birth_parish_treated)) +
  geom_point(cex = 8) +
  # geom_text(aes(label = decile_share_lab_control), hjust = 1.3, size = 6) +
  # geom_text(aes(label = decile_share_lab_treated), hjust = -.5, size = 6) +
  labs(
    x = "Share of total income",
    y = "Quintile of income distribution",
    title = "Income quintile shares for 
                          <b><span style = 'color:#9C6114;'>treated</span></b> and 
                          <b><span style = 'color:#000080;'>control</span></b> individuals"
  ) +
  scale_y_continuous(labels = scales::number_format(scale = 10, accuracy = 1)) +
  scale_x_continuous(labels = scales::percent_format()) +
  # scale_colour_manual(values = c("#000080", "#9C6114")) +
  theme(
    # panel.grid.major.y = element_blank(),
    panel.grid.minor.y = element_blank(),
    panel.grid.minor.x = element_blank(),
    
    plot.title = element_markdown(size = 32, family = 'roboto'),
    plot.title.position = "plot",
    legend.position = "none",
    text = element_text(family = 'ibm', size = 18)
  ) 





df %>%
    filter(birth_parish_treated == 1,
        log_income_incl_zero > 0) %>%
    select(log_income_incl_zero) %>%
    arrange(log_income_incl_zero) %>%
    mutate(
        rn = row_number(),
        pctile = ntile(rn, 5),
        total_income = sum(log_income_incl_zero, na.rm = TRUE)
    ) %>% 
    group_by(pctile) %>%
    mutate(sum_income = sum(log_income_incl_zero)) %>%
    ungroup() %>%
    distinct(pctile, sum_income, total_income) %>%
    mutate(
        cumsum_income = cumsum(sum_income),
        share_of_total_income = cumsum_income / total_income,
        decile_share = sum_income / total_income,
        pctile = pctile / 5
    ) %>%
    ungroup()

df %>%
    filter(birth_parish_treated == 0,
        log_income_incl_zero > 0) %>%
    select(log_income_incl_zero) %>%
    arrange(log_income_incl_zero) %>%
    mutate(
        rn = row_number(),
        pctile = ntile(rn, 5),
        total_income = sum(log_income_incl_zero, na.rm = TRUE)
    ) %>% 
    group_by(pctile) %>%
    mutate(sum_income = sum(log_income_incl_zero)) %>%
    ungroup() %>%
    distinct(pctile, sum_income, total_income) %>%
    mutate(
        cumsum_income = cumsum(sum_income),
        share_of_total_income = cumsum_income / total_income,
        decile_share = sum_income / total_income,
        pctile = pctile / 5
    ) %>%
    ungroup()






df <- df %>%
    mutate(log_income = log_income_incl_zero)


df_incomes <- df %>%
    mutate(log_income = case_when(
        log_income == -Inf ~ 1,
        TRUE ~ log_income
    )) %>%
    # filter(log_income > 1) %>%
    select(log_income, current_parish_treated) %>%
    arrange(log_income)

df_incomes <- df_incomes %>%
    group_by(current_parish_treated) %>%
    mutate(total_income = sum(log_income, na.rm = TRUE))


decile_shares <- df_incomes %>%
    group_by(current_parish_treated) %>%
    mutate(
        rn = row_number(),
        pctile = ntile(rn, 5)
    ) %>%
    ungroup() %>%
    group_by(current_parish_treated, pctile) %>%
    mutate(sum_income = sum(log_income)) %>%
    ungroup() %>%
    distinct(current_parish_treated, pctile, sum_income, total_income) %>%
    group_by(current_parish_treated) %>%
    mutate(
        cumsum_income = cumsum(sum_income),
        share_of_total_income = cumsum_income / total_income,
        decile_share = sum_income / total_income,
        pctile = pctile / 5
    ) %>%
    ungroup()


decile_shares %>%
    mutate(
        pctile = pctile / 2,
        decile_share_lab_control = case_when(
            current_parish_treated == "Control" ~ scales::percent(decile_share, accuracy = 1),
            TRUE ~ NA_character_
        ),
        decile_share_lab_treated = case_when(
            current_parish_treated == "Treated" ~ scales::percent(decile_share, accuracy = 1),
            TRUE ~ NA_character_
        )
    ) %>%
    ggplot(aes(y = pctile, x = decile_share, colour = current_parish_treated)) +
    geom_point(cex = 8) +
    geom_line() +
    geom_text(aes(label = decile_share_lab_control), hjust = 1.3, size = 6) +
    geom_text(aes(label = decile_share_lab_treated), hjust = -.5, size = 6) +
    labs(
        x = "Share of total income in parish",
        y = "Percentile of income distribution",
        title = "Income quintile shares for
                          <b><span style = 'color:#9C6114;'>treated</span></b> and
                          <b><span style = 'color:#000080;'>control</span></b> individuals"
    ) +
    scale_y_continuous(labels = scales::percent_format(scale = 200)) +
    scale_x_continuous(labels = scales::percent_format()) +
    # scale_colour_manual(values = c("#000080", "#9C6114")) +
    theme(
        # panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        panel.grid.minor.x = element_blank(),
        plot.title = element_markdown(size = 32, family = "roboto"),
        plot.title.position = "plot",
        legend.position = "none",
        text = element_text(family = "ibm", size = 18)
    )

ggsave(filename = here::here("figures/07-inequality-plot.jpeg"), device = "jpeg", width = 290, height = 231, units = "mm", dpi = 300)

```